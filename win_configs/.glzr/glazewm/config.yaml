general:
  # Commands to run when the WM has started. This is useful for running a
  # script or launching another application.
  # Example: The below command launches Zebar.
  startup_commands: ["shell-exec zebar"]

  # Commands to run just before the WM is shutdown.
  # Example: The below command kills Zebar.
  shutdown_commands: ["shell-exec taskkill /IM zebar.exe /F"]

  # Commands to run after the WM config is reloaded.
  config_reload_commands: []

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: true

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: "monitor_focus"

  # How windows should be hidden when switching workspaces.
  # - 'cloak': Recommended. Hides windows with no animation.
  # - 'hide': Legacy method (v3.5 and earlier) that has a brief animation,
  # but has stability issues with some apps.
  hide_method: "cloak"

  # Affects which windows get shown in the native Windows taskbar. Has no
  # effect if `hide_method: 'hide'`.
  # - 'true': Show all windows (regardless of workspace).
  # - 'false': Only show windows from the currently shown workspaces.
  show_all_in_taskbar: false

gaps:
  # Whether to scale the gaps with the DPI of the monitor.
  scale_with_dpi: true

  # Gap between adjacent windows.
  inner_gap: "0px"

  # Gap between windows and the screen edge.
  outer_gap:
    top: "30px"
    right: "0px"
    bottom: "0px"
    left: "0px"

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: "#8dbcff"

    # Remove the title bar from the window's frame. Note that this can
    # cause rendering issues for some applications.
    hide_title_bar:
      enabled: false

    # Change the corner style of the window's frame.
    # ** Exclusive to Windows 11 due to API limitations.
    corner_style:
      enabled: false
      # Allowed values: 'square', 'rounded', 'small_rounded'.
      style: "square"

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: false
      color: "#a1a1a1"
    hide_title_bar:
      enabled: false
      color: "#a1a1a1"
    corner_style:
      enabled: false
      style: "square"

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: "tiling"

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: false

      # Whether to show floating windows as always on top.
      shown_on_top: false

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

workspaces:
  - name: "1"
  - name: "2"
  - name: "3"
  - name: "4"
  - name: "5"
  - name: "6"
  - name: "7"
  - name: "8"
  - name: "9"
  - name: "0"
  - name: "t"
    display_name: "Terminal"
    bind_to_monitor: 2
  - name: "ob"
    display_name: "Obsidian"
    bind_to_monitor: 2
  - name: "web1"
    display_name: "Web1"
    bind_to_monitor: 0
  - name: "web2"
    display_name: "Web2"
    bind_to_monitor: 1
  - name: "web3"
    display_name: "Web3"
    bind_to_monitor: 2
  - name: "file"
    display_name: "Explorer"
    bind_to_monitor: 2
  - name: "main1"
    display_name: "main1"
    bind_to_monitor: 1
  - name: "main2"
    display_name: "main2"
    bind_to_monitor: 1
  - name: "main3"
    display_name: "main3"
    bind_to_monitor: 1
    #Workspaces @#glaze
  - name: "mydoc"
    display_name: "mydoc"
    bind_to_monitor: 1
  - name: "whiteboard"
    display_name: "WhiteBoard"
    bind_to_monitor: 1
  - name: "sound"
    display_name: "Sound"
    bind_to_monitor: 2

window_rules:
  - commands: ["ignore"]
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: "zebar" }
      - window_process: { equals: "/Taskmgr|ScreenClippingHost/" }
      - window_process: { equals: "Everything" }
      - window_process: { equals: "KeePass" }
      - window_process: { equals: "FolderSizeExplorer" }
      - window_process: { equals: "NetFile" }
      - window_process: { equals: "NetTransfer" }
      - window_process: { equals: "gta5" }
      - window_process: { equals: "VaM" }
      #Ignore@#glaze

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: "[Pp]icture.in.[Pp]icture" }
        window_class: { regex: "Chrome_WidgetWin_1|MozillaDialogClass" }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: "PowerToys.PowerAccent" }
      - window_process: { equals: "PowerToys.Peek.UI" }
      - window_process: { equals: "BandiView" }
      - window_process: { equals: "Lively" }
        window_class: { regex: 'HwndWrapper\[PowerToys\.PowerAccent.*?\]' }

      - window_process: { equals: "PotPlayer64" }

  - commands: ["set-floating"]
    match:
      - window_class: { equals: "#32770" }
      - window_process: { equals: "Bandizip" }
      - window_process: { equals: "SnippingTool" }
      - window_process: { equals: "voicemeeter_x64" }
      - window_process: { equals: "Galaxy Buds" }
      - window_process: { equals: "rider64" }
      - window_process: { equals: "studio64" }
        window_class: { regex: "SunAwtDialog" }
      - window_process: { equals: "Taskmgr" }
      - window_process: { equals: "setup" }
        window_class: { regex: "HwndWrapper*" }
      - window_process: { equals: "perfmon" }
      - window_process: { equals: "AutoHotkeyUX" }
      - window_title: { equals: "Galaxy Buds" }
      - window_process: { equals: "Ahk2Exe" }
      #SetFloating@#glaze

  # - commands: ["move --workspace cave"?]
  #   match:
  #     - window_title: { equals: "TheCave" }
  - commands: ["set-tiling"]
    match:
      - window_title: { equals: "TheCaveLogger" }
  - commands: ["move --workspace sound"]
    match:
      - window_process: { equals: "voicemeeter_x64" }
    #WindowRules @#glaze

binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: "resize"
    keybindings:
      - commands: ["resize --width -2%"]
        bindings: ["h", "left"]
      - commands: ["resize --width +2%"]
        bindings: ["l", "right"]
      - commands: ["resize --height +2%"]
        bindings: ["k", "up"]
      - commands: ["resize --height -2%"]
        bindings: ["j", "down"]
      # Press enter/escape to return to default keybindings.
      - commands: ["wm-disable-binding-mode --name resize"]
        bindings: ["escape", "enter"]

  # When enabled, all keybindings are disabled except for alt+shift+p which
  # returns to default keybindings.
  - name: "pause"
    keybindings:
      - commands: ["wm-disable-binding-mode --name pause"]
        bindings: ["oem_question+rshift+p"]

keybindings:
  # Shift focus in a given direction.
  - commands: ["focus --direction left"]
    bindings: ["alt+h"]
  - commands: ["focus --direction right"]
    bindings: ["alt+l"]
  - commands: ["focus --direction up"]
    bindings: ["alt+k"]
  - commands: ["focus --direction down"]
    bindings: ["alt+j"]
    #MoveFocus @#glaze

  # Move focused window in a given direction.
  - commands: ["move --direction left"]
    bindings: ["oem_period+rshift+a"]
  - commands: ["move --direction right"]
    bindings: ["oem_period+rshift+d"]
  - commands: ["move --direction up"]
    bindings: ["oem_period+rshift+w"]
  - commands: ["move --direction down"]
    bindings: ["oem_period+rshift+s"]
    #MoveFocusedWindow @#glaze.move

  # Move the focused window's parent workspace to a monitor in a given direction.
  - commands: ["move-workspace --direction left"]
    bindings: ["oem_question+rshift+a"]
  - commands: ["move-workspace --direction right"]
    bindings: ["oem_question+rshift+d"]
  - commands: ["move-workspace --direction up"]
    bindings: ["oem_question+rshift+w"]
  - commands: ["move-workspace --direction down"]
    bindings: ["oem_question+rshift+s"]
    #WorkspaceMove @#glaze.move

  # Resize focused window by a percentage or pixel amount.
  - commands: ["resize --width -2%"]
    bindings: ["rshift+oem_pipe+left"]
  - commands: ["resize --width +2%"]
    bindings: ["rshift+oem_pipe+right"]
  - commands: ["resize --height +2%"]
    bindings: ["rshift+oem_pipe+down"]
  - commands: ["resize --height -2%"]
    bindings: ["rshift+oem_pipe+up"]
    #ResizeWindow@#glaze

  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  - commands: ["wm-enable-binding-mode --name resize"]
    bindings: ["oem_question+rshift+e"]

  # Disables all keybindings until alt+shift+p is pressed again.
  - commands: ["wm-enable-binding-mode --name pause"]
    bindings: ["oem_question+rshift+p"]

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ["toggle-tiling-direction"]
    bindings: ["alt+z"]

  # Change focus from tiling windows -> floating -> fullscreen.
  - commands: ["wm-cycle-focus"]
    bindings: ["alt+space"]

  # Change the focused window to be floating.
  - commands: ["toggle-floating --centered"]
    bindings: ["oem_question+rshift+f"]
    #ToggleFloating @#glaze

  # Change the focused window to be tiling.
  - commands: ["toggle-tiling"]
    bindings: ["oem_question+rshift+g"]

  # Change the focused window to be fullscreen.
  - commands: ["toggle-fullscreen"]
    bindings: ["oem_question+rshift+x"]
    #ToggleFullscreen@#glaze

  # Minimize focused window.
  - commands: ["toggle-minimized"]
    bindings: ["oem_question+rshift+m"]

  # Close focused window.
  - commands: ["close"]
    bindings: ["oem_question+rshift+q"]

  # Kill GlazeWM process safely.
  - commands: ["wm-exit"]
    bindings: ["oem_question+rshift+f4"]

  # Re-evaluate configuration file.
  - commands: ["wm-reload-config"]
    bindings: ["oem_question+rshift+r"]

  # Redraw all windows.
  - commands: ["wm-redraw"]
    bindings: ["oem_question+rshift+o"]

  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  - commands: ["shell-exec wt"]
    bindings: ["shift+insert+t"]
  - commands:
      ["shell-exec C:/Users/creat/AppData/Local/Programs/Obsidian/Obsidian.exe"]
    bindings: ["shift+insert+o"]
  - commands: ["shell-exec code"]
    bindings: ["shift+insert+c"]
  - commands:
      [
        "shell-exec C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/devenv.exe",
      ]
    bindings: ["shift+insert+v"]
  - commands:
      ["shell-exec C:/Program Files/Google/Chrome/Application/chrome.exe"]
    bindings: ["shift+insert+w"]
  - commands: ["shell-exec Everything"]
    bindings: ["shift+insert+e"]
  - commands: ["shell-exec C:/Windows/explorer.exe"]
    bindings: ["shift+insert+f"]
  - commands:
      ["shell-exec C:/Program Files/KeePass Password Safe 2/KeePass.exe"]
    bindings: ["shift+insert+k"]
  - commands:
      [
        "shell-exec C:/Program Files/WindowsApps/Microsoft.ScreenSketch_11.2409.25.0_x64__8wekyb3d8bbwe/SnippingTool/SnippingTool.exe",
      ]
    bindings: ["shift+insert+g"]
  - commands:
      [
        "shell-exec alacritty --config-file C:\\Users\\creat\\mydoc\\win_configs\\alacritty\\alacritty.pwsh.toml",
      ]
    #AlacrittyPwsh@#glaze
    bindings: ["shift+insert+z"]
  - commands:
      [
        "shell-exec alacritty_admin"
      ]
    #AlacrittyPwshAdmin@#glaze
    bindings: ["shift+insert+p"]
  - commands: [
      "shell-exec C:/Users/creat/OneDrive/문서/AutoHotkey/NumpadRightClick.exe",
      ]
    bindings: ["shift+insert+0"]
  - commands: ["shell-exec C:/Program Files/Alacritty/alacritty.exe"]
    bindings: ["shift+insert+a"]
    #AlacrittyMsys2@#glaze
    #ExecProgram@#glaze

  # Focus the next/previous workspace defined in `workspaces` config.
  - commands: ["focus --next-workspace"]
    bindings: ["alt+n"]
  - commands: ["focus --prev-workspace"]
    bindings: ["alt+p"]

  # Focus the workspace that last had focus.
  - commands: ["focus --recent-workspace"]
    bindings: ["oem_question+rshift+i"]

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ["focus --workspace 1"]
    bindings: ["insert+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["insert+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["insert+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["insert+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["insert+5"]
  - commands: ["focus --workspace 6"]
    bindings: ["insert+6"]
  - commands: ["focus --workspace 7"]
    bindings: ["insert+7"]
  - commands: ["focus --workspace 8"]
    bindings: ["insert+8"]
  - commands: ["focus --workspace 9"]
    bindings: ["insert+9"]
  - commands: ["focus --workspace 0"]
    bindings: ["insert+0"]
  - commands: ["focus --workspace t"]
    bindings: ["insert+t"]
  - commands: ["focus --workspace ob"]
    bindings: ["insert+z"]
  - commands: ["focus --workspace web1"]
    bindings: ["insert+q"]
  - commands: ["focus --workspace web2"]
    bindings: ["insert+w"]
  - commands: ["focus --workspace web3"]
    bindings: ["insert+e"]
  - commands: ["focus --workspace file"]
    bindings: ["insert+f"]
  - commands: ["focus --workspace main1"]
    bindings: ["insert+a"]
  - commands: ["focus --workspace main2"]
    bindings: ["insert+s"]
  - commands: ["focus --workspace main3"]
    bindings: ["insert+d"]
    #FocusWorkspace @#glaze
  - commands: ["focus --workspace mydoc"]
    bindings: ["insert+m"]
  - commands: ["focus --workspace whiteboard"]
    bindings: ["insert+b"]
  - commands: ["focus --workspace sound"]
    bindings: ["insert+u"]

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ["move --workspace 1", "focus --workspace 1"]
    bindings: ["rshift+oem_pipe+1"]
  - commands: ["move --workspace 2", "focus --workspace 2"]
    bindings: ["rshift+oem_pipe+2"]
  - commands: ["move --workspace 3", "focus --workspace 3"]
    bindings: ["rshift+oem_pipe+3"]
  - commands: ["move --workspace 4", "focus --workspace 4"]
    bindings: ["rshift+oem_pipe+4"]
  - commands: ["move --workspace 5", "focus --workspace 5"]
    bindings: ["rshift+oem_pipe+5"]
  - commands: ["move --workspace 6", "focus --workspace 6"]
    bindings: ["rshift+oem_pipe+6"]
  - commands: ["move --workspace 7", "focus --workspace 7"]
    bindings: ["rshift+oem_pipe+7"]
  - commands: ["move --workspace 8", "focus --workspace 8"]
    bindings: ["rshift+oem_pipe+8"]
  - commands: ["move --workspace 9", "focus --workspace 9"]
    bindings: ["rshift+oem_pipe+9"]
  - commands: ["move --workspace 0", "focus --workspace 0"]
    bindings: ["rshift+oem_pipe+0"]
  - commands: ["move --workspace t", "focus --workspace t"]
    bindings: ["rshift+oem_pipe+t"]
  - commands: ["move --workspace main1", "focus --workspace main1"]
    bindings: ["rshift+oem_pipe+a"]
  - commands: ["move --workspace main2", "focus --workspace main2"]
    bindings: ["rshift+oem_pipe+s"]
  - commands: ["move --workspace main3", "focus --workspace main3"]
    bindings: ["rshift+oem_pipe+d"]
  - commands: ["move --workspace ob", "focus --workspace ob"]
    bindings: ["rshift+oem_pipe+z"]
  - commands: ["move --workspace web1", "focus --workspace web1"]
    bindings: ["rshift+oem_pipe+q"]
  - commands: ["move --workspace web2", "focus --workspace web2"]
    bindings: ["rshift+oem_pipe+w"]
  - commands: ["move --workspace web3", "focus --workspace web3"]
    bindings: ["rshift+oem_pipe+e"]
  - commands: ["move --workspace file", "focus --workspace file"]
    bindings: ["rshift+oem_pipe+f"]
  - commands: ["move --workspace mydoc", "focus --workspace mydoc"]
    bindings: ["rshift+oem_pipe+m"]
  - commands: ["move --workspace whiteboard", "focus --workspace whiteboard"]
    bindings: ["rshift+oem_pipe+b"]
  - commands: ["move --workspace sound", "focus --workspace sound"]
    bindings: ["rshift+oem_pipe+u"]
    #MoveToWorkspce @#glaze
